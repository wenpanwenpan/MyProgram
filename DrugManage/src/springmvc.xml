<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	
	<!-- 加入自动扫描的包 -->
	<context:component-scan base-package="com.wp.demo"></context:component-scan>
	

<!-- 配置视图解析器,将请求映射的返回值转换为实际视图 -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix" value="/WEB-INF/views/"></property>
	<property name="suffix" value=".jsp"></property>
</bean>


	<!-- 
		<mvc:default-servlet-handler/>将在springmvc上下文中定义一个DefaultServletHttpRequestHandler,
		他会对进入DispatcherServlet的请求进行筛查，如果发现是没有经过映射的请求，就将该请求交由web服务器默认的Servlet处理，
		如果不是静态资源的请求，才由DispatcherServlet继续处理。
		
		一般web应用服务器默认的Servlet的名称都是default，父使用的web服务器默认的servlet名称不是default，则需要通过
		default-servlet-name属性显示指定
	 -->
<mvc:default-servlet-handler/>

<!-- 让requestMpping起作用 -->
<mvc:annotation-driven></mvc:annotation-driven>

	<!-- 配置国际化资源文件,使用数据验证 -->
	<bean id="messageSource" 
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n"></property>
	</bean>



</beans>
